{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"R-Type The goal of the Epitech R-Type project is to implement a multithreaded server and a graphical client for a game called R-Type, using an engine of our own design. Pre-requisites What you need to get started with our project... Project layout This advanced C++ knowledge unit project introduces you to the development of networked video games and gives you the opportunity to explore advanced development techniques and learn how to develop networked video games. Also, gives you the opportunity to explore advanced development techniques as well as learn good software engineering practices. The main objective is to implement a multithreaded server and a graphical client for a video game commonly known as R-Type, using a game engine of our own design. It uses two libraries: \ud83c\udfae\u200b SFML , The library used to display. \ud83d\udef0\ufe0f BOOST ASIO , The library used to manage communication, threads and processes. Installation $ git clone git@github.com:EpitechPromo2026/B-CPP-500-COT-5-1-rtype-shalom.ayitchehou.git or $ git clone https://github.com/EpitechPromo2026/B-CPP-500-COT-5-1-rtype-shalom.ayitchehou.git Packages managers R-Type has been managed with the following package managers: \ud83d\udee0\ufe0f CMAKE \ud83d\uddc2\ufe0f\u200b CONAN Build the program On Linux : You may execute the script build.sh or the following commands : cmake -B ./build -DCMAKE_BUILD_TYPE=Release cmake --build ./build mkdir build cd build conan install .. --build=missing -c tools.system.package_manager:mode=install -c tools.system.package_manager:sudo=True cd .. cmake -B ./build -DCMAKE_BUILD_TYPE=Release cmake --build ./build copy \".\\Debug\\r-type_server.exe\" . copy \".\\Debug\\r-type_client.exe\" . Documentation The code documentation is available: Server Client","title":"R-Type"},{"location":"#r-type","text":"The goal of the Epitech R-Type project is to implement a multithreaded server and a graphical client for a game called R-Type, using an engine of our own design.","title":"R-Type"},{"location":"#pre-requisites","text":"What you need to get started with our project...","title":"Pre-requisites"},{"location":"#project-layout","text":"This advanced C++ knowledge unit project introduces you to the development of networked video games and gives you the opportunity to explore advanced development techniques and learn how to develop networked video games. Also, gives you the opportunity to explore advanced development techniques as well as learn good software engineering practices. The main objective is to implement a multithreaded server and a graphical client for a video game commonly known as R-Type, using a game engine of our own design. It uses two libraries: \ud83c\udfae\u200b SFML , The library used to display. \ud83d\udef0\ufe0f BOOST ASIO , The library used to manage communication, threads and processes.","title":"Project layout"},{"location":"#installation","text":"$ git clone git@github.com:EpitechPromo2026/B-CPP-500-COT-5-1-rtype-shalom.ayitchehou.git or $ git clone https://github.com/EpitechPromo2026/B-CPP-500-COT-5-1-rtype-shalom.ayitchehou.git","title":"Installation"},{"location":"#packages-managers","text":"R-Type has been managed with the following package managers: \ud83d\udee0\ufe0f CMAKE \ud83d\uddc2\ufe0f\u200b CONAN","title":"Packages managers"},{"location":"#build-the-program","text":"On Linux : You may execute the script build.sh or the following commands : cmake -B ./build -DCMAKE_BUILD_TYPE=Release cmake --build ./build mkdir build cd build conan install .. --build=missing -c tools.system.package_manager:mode=install -c tools.system.package_manager:sudo=True cd .. cmake -B ./build -DCMAKE_BUILD_TYPE=Release cmake --build ./build copy \".\\Debug\\r-type_server.exe\" . copy \".\\Debug\\r-type_client.exe\" .","title":"Build the program"},{"location":"#documentation","text":"The code documentation is available: Server Client","title":"Documentation"},{"location":"inde/","text":"R-Type Project layout Ce projet de l'unit\u00e9 de connaissances C++ avanc\u00e9 introduit au d\u00e9veloppement de jeux vid\u00e9o en r\u00e9seau et vous donne l'occasion d'explorer des techniques de d\u00e9veloppement avanc\u00e9es ainsi permettant d'apprendre \u00e0 d\u00e9velopper des jeux vid\u00e9o en r\u00e9seau. Aussi, vous donne l'occasion d'explorer des techniques de d\u00e9veloppement avanc\u00e9es ainsi que d'apprendre de bonnes pratiques de g\u00e9nie logiciel. L'objectif principal est d'impl\u00e9menter un serveur multithread et un client graphique pour un jeu vid\u00e9o commun\u00e9ment appel\u00e9 R-Type en utilisant un moteur de jeu de notre propre conception. Build the program On Linux : You may execute the script build.sh or the following commands : cmake -B ./build -DCMAKE_BUILD_TYPE=Release cmake --build ./build On Windows : You may execute the script build.bat or the following commands : mkdir build cd build conan install .. --build=missing -c tools.system.package_manager:mode=install -c tools.system.package_manager:sudo=True cd .. cmake -B ./build -DCMAKE_BUILD_TYPE=Release cmake --build ./build copy \".\\Debug\\r-type_server.exe\" . copy \".\\Debug\\r-type_client.exe\" . Documentation The code documentation is available: Server Client","title":"R-Type"},{"location":"inde/#r-type","text":"","title":"R-Type"},{"location":"inde/#project-layout","text":"Ce projet de l'unit\u00e9 de connaissances C++ avanc\u00e9 introduit au d\u00e9veloppement de jeux vid\u00e9o en r\u00e9seau et vous donne l'occasion d'explorer des techniques de d\u00e9veloppement avanc\u00e9es ainsi permettant d'apprendre \u00e0 d\u00e9velopper des jeux vid\u00e9o en r\u00e9seau. Aussi, vous donne l'occasion d'explorer des techniques de d\u00e9veloppement avanc\u00e9es ainsi que d'apprendre de bonnes pratiques de g\u00e9nie logiciel. L'objectif principal est d'impl\u00e9menter un serveur multithread et un client graphique pour un jeu vid\u00e9o commun\u00e9ment appel\u00e9 R-Type en utilisant un moteur de jeu de notre propre conception.","title":"Project layout"},{"location":"inde/#build-the-program","text":"On Linux : You may execute the script build.sh or the following commands : cmake -B ./build -DCMAKE_BUILD_TYPE=Release cmake --build ./build On Windows : You may execute the script build.bat or the following commands : mkdir build cd build conan install .. --build=missing -c tools.system.package_manager:mode=install -c tools.system.package_manager:sudo=True cd .. cmake -B ./build -DCMAKE_BUILD_TYPE=Release cmake --build ./build copy \".\\Debug\\r-type_server.exe\" . copy \".\\Debug\\r-type_client.exe\" .","title":"Build the program"},{"location":"inde/#documentation","text":"The code documentation is available: Server Client","title":"Documentation"}]}